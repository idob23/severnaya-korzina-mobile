// lib/screens/payment/payment_success_screen.dart
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class PaymentSuccessScreen extends StatelessWidget {
  final String orderId;
  final double amount;
  final String paymentMethod;
  final Map<String, dynamic> orderData;

  const PaymentSuccessScreen({
    Key? key,
    required this.orderId,
    required this.amount,
    required this.paymentMethod,
    required this.orderData,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.green[50],
      appBar: AppBar(
        title: Text('–û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'),
        backgroundColor: Colors.green,
        foregroundColor: Colors.white,
        automaticallyImplyLeading: false,
      ),
      body: SingleChildScrollView(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            SizedBox(height: 40),

            // –ò–∫–æ–Ω–∫–∞ —É—Å–ø–µ—Ö–∞
            Container(
              width: 120,
              height: 120,
              decoration: BoxDecoration(
                color: Colors.green,
                shape: BoxShape.circle,
              ),
              child: Icon(
                Icons.check,
                size: 80,
                color: Colors.white,
              ),
            ),

            SizedBox(height: 24),

            // –ó–∞–≥–æ–ª–æ–≤–æ–∫
            Text(
              '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.green[800],
              ),
              textAlign: TextAlign.center,
            ),

            SizedBox(height: 8),

            Text(
              '–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ',
              style: TextStyle(
                fontSize: 16,
                color: Colors.grey[600],
              ),
              textAlign: TextAlign.center,
            ),

            SizedBox(height: 32),

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ
            _buildPaymentInfo(),

            SizedBox(height: 20),

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
            _buildOrderInfo(),

            SizedBox(height: 20),

            // –ß—Ç–æ –¥–∞–ª—å—à–µ
            _buildNextSteps(),

            SizedBox(height: 32),

            // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            _buildActionButtons(context),
          ],
        ),
      ),
    );
  }

  Widget _buildPaymentInfo() {
    return Card(
      child: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              '–î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 12),
            _buildInfoRow('–ù–æ–º–µ—Ä –ø–ª–∞—Ç–µ–∂–∞:', orderId),
            _buildInfoRow('–°—É–º–º–∞:', '${amount.toStringAsFixed(0)} ‚ÇΩ'),
            _buildInfoRow('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', paymentMethod),
            _buildInfoRow('–î–∞—Ç–∞:', _formatDateTime(DateTime.now())),
            _buildInfoRow('–°—Ç–∞—Ç—É—Å:', '–û–ø–ª–∞—á–µ–Ω–æ', isSuccess: true),
          ],
        ),
      ),
    );
  }

  Widget _buildOrderInfo() {
    final totalAmount = orderData['totalAmount'] as double;
    final remainingAmount = totalAmount - amount;

    return Card(
      child: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 12),
            _buildInfoRow('–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–µ–Ω–∏—è:', orderData['address']),
            _buildInfoRow('–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è:', orderData['deliveryTime']),
            _buildInfoRow(
                '–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:', '${totalAmount.toStringAsFixed(0)} ‚ÇΩ'),
            _buildInfoRow('–ü—Ä–µ–¥–æ–ø–ª–∞—á–µ–Ω–æ:', '${amount.toStringAsFixed(0)} ‚ÇΩ'),
            _buildInfoRow('–ö –¥–æ–ø–ª–∞—Ç–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏:',
                '${remainingAmount.toStringAsFixed(0)} ‚ÇΩ',
                isHighlighted: true),
          ],
        ),
      ),
    );
  }

  Widget _buildNextSteps() {
    return Card(
      color: Colors.blue[50],
      child: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.info, color: Colors.blue),
                SizedBox(width: 8),
                Text(
                  '–ß—Ç–æ –¥–∞–ª—å—à–µ?',
                  style: TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                    color: Colors.blue[800],
                  ),
                ),
              ],
            ),
            SizedBox(height: 12),
            _buildStepItem(
                '1', '–ú—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –≤–∞—à –∑–∞–∫–∞–∑ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π'),
            _buildStepItem(
                '2', '–û—Ç–ø—Ä–∞–≤–∏–º SMS, –∫–æ–≥–¥–∞ —Ç–æ–≤–∞—Ä—ã –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã –∫ –≤—ã–¥–∞—á–µ'),
            _buildStepItem('3', '–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è'),
            _buildStepItem(
                '4', '–î–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –æ—Å—Ç–∞–≤—à—É—é—Å—è —Å—É–º–º—É –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ —Ç–æ–≤–∞—Ä—ã'),
            SizedBox(height: 12),
            Container(
              width: double.infinity,
              padding: EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: Colors.green[100],
                borderRadius: BorderRadius.circular(8),
              ),
              child: Column(
                children: [
                  Text(
                    'üìç –ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏',
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                  Text('—É–ª. –õ–µ–Ω–∏–Ω–∞, 15, –º–∞–≥–∞–∑–∏–Ω "–°–µ–≤–µ—Ä—è–Ω–∫–∞"'),
                  Text('üìû +7 (914) 123-45-67'),
                  Text('üïê –ü–Ω-–ü—Ç: 9:00-19:00, –°–±: 10:00-16:00'),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildStepItem(String number, String text) {
    return Padding(
      padding: EdgeInsets.only(bottom: 8),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            width: 24,
            height: 24,
            decoration: BoxDecoration(
              color: Colors.blue,
              shape: BoxShape.circle,
            ),
            child: Center(
              child: Text(
                number,
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 12,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
          ),
          SizedBox(width: 12),
          Expanded(
            child: Text(text),
          ),
        ],
      ),
    );
  }

  Widget _buildInfoRow(String label, String value,
      {bool isSuccess = false, bool isHighlighted = false}) {
    return Padding(
      padding: EdgeInsets.symmetric(vertical: 4),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(
            width: 140,
            child: Text(
              label,
              style: TextStyle(color: Colors.grey[600]),
            ),
          ),
          Expanded(
            child: Row(
              children: [
                if (isSuccess) ...[
                  Icon(Icons.check_circle, color: Colors.green, size: 16),
                  SizedBox(width: 4),
                ],
                Expanded(
                  child: Text(
                    value,
                    style: TextStyle(
                      fontWeight:
                          isHighlighted ? FontWeight.bold : FontWeight.normal,
                      color: isHighlighted ? Colors.orange[700] : null,
                    ),
                  ),
                ),
                if (label.contains('–ù–æ–º–µ—Ä –ø–ª–∞—Ç–µ–∂–∞')) ...[
                  SizedBox(width: 8),
                  GestureDetector(
                    onTap: () {
                      Clipboard.setData(ClipboardData(text: value));
                      // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏
                    },
                    child: Icon(Icons.copy, size: 16, color: Colors.blue),
                  ),
                ],
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildActionButtons(BuildContext context) {
    return Column(
      children: [
        SizedBox(
          width: double.infinity,
          height: 48,
          child: ElevatedButton.icon(
            onPressed: () {
              // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É
              Navigator.of(context).popUntil((route) => route.isFirst);
            },
            icon: Icon(Icons.home),
            label: Text('–ù–∞ –≥–ª–∞–≤–Ω—É—é'),
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.blue,
              foregroundColor: Colors.white,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(8),
              ),
            ),
          ),
        ),
        SizedBox(height: 12),
        Row(
          children: [
            Expanded(
              child: OutlinedButton.icon(
                onPressed: () {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∑–∞–∫–∞–∑–∞–º
                  Navigator.of(context).popUntil((route) => route.isFirst);
                  // TODO: –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∑–∞–∫–∞–∑–æ–≤
                },
                icon: Icon(Icons.list_alt),
                label: Text('–ú–æ–∏ –∑–∞–∫–∞–∑—ã'),
              ),
            ),
            SizedBox(width: 12),
            Expanded(
              child: OutlinedButton.icon(
                onPressed: () {
                  // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
                  Navigator.of(context).popUntil((route) => route.isFirst);
                  // TODO: –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞
                },
                icon: Icon(Icons.shopping_bag),
                label: Text('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
              ),
            ),
          ],
        ),
      ],
    );
  }

  String _formatDateTime(DateTime dateTime) {
    return '${dateTime.day.toString().padLeft(2, '0')}.${dateTime.month.toString().padLeft(2, '0')}.${dateTime.year} '
        '${dateTime.hour.toString().padLeft(2, '0')}:${dateTime.minute.toString().padLeft(2, '0')}';
  }
}
