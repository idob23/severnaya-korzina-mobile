// lib/screens/profile/profile_screen.dart - –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø
import 'package:flutter/material.dart';
import 'package:package_info_plus/package_info_plus.dart';
import 'package:provider/provider.dart';
import '../../providers/auth_provider.dart';
import '../../services/api_service.dart'; // –î–û–ë–ê–í–ò–¢–¨ –≠–¢–û–¢ –ò–ú–ü–û–†–¢
import 'package:url_launcher/url_launcher.dart'; // –î–û–ë–ê–í–õ–ï–ù –ò–ú–ü–û–†–¢
import '../auth/auth_choice_screen.dart';
import 'dart:math' as math;
import 'package:severnaya_korzina/services/update_service.dart';

class ProfileScreen extends StatefulWidget {
  @override
  _ProfileScreenState createState() => _ProfileScreenState();
}

class _ProfileScreenState extends State<ProfileScreen>
    with TickerProviderStateMixin {
  String _appVersion = '';

  // –î–û–ë–ê–í–õ–ï–ù–ê –°–°–´–õ–ö–ê –ù–ê WHATSAPP –ì–†–£–ü–ü–£
  static const String WHATSAPP_GROUP_LINK =
      'https://chat.whatsapp.com/BkMuB7ALKzZ5Zj81yGhdvG';

  late AnimationController _progressAnimationController;
  late AnimationController _pulseAnimationController;
  late Animation<double> _progressAnimation;
  late Animation<double> _pulseAnimation;

  // –°—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ
  final ApiService _apiService = ApiService(); // –ù–û–í–ê–Ø –°–¢–†–û–ö–ê
  Map<String, dynamic>? _batchData; // –ò–ó–ú–ï–ù–ï–ù–û: —Ç–µ–ø–µ—Ä—å nullable
  bool _isLoadingBatch = true; // –ù–û–í–ê–Ø –°–¢–†–û–ö–ê
  String? _batchError; // –ù–û–í–ê–Ø –°–¢–†–û–ö–ê

  @override
  void initState() {
    super.initState();

    _loadAppVersion(); // –î–æ–±–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    _progressAnimationController = AnimationController(
      duration: Duration(milliseconds: 1500),
      vsync: this,
    );

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏
    _pulseAnimationController = AnimationController(
      duration: Duration(milliseconds: 1000),
      vsync: this,
    );

    // –ó–ê–ú–ï–ù–ò–¢–¨ –≠–¢–ò –°–¢–†–û–ö–ò:
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ —Å –±–∞–∑–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    _progressAnimation = Tween<double>(
      begin: 0.0,
      end: 0.0, // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    ).animate(CurvedAnimation(
      parent: _progressAnimationController,
      curve: Curves.easeInOut,
    ));

    _pulseAnimation = Tween<double>(
      begin: 1.0,
      end: 1.05,
    ).animate(CurvedAnimation(
      parent: _pulseAnimationController,
      curve: Curves.easeInOut,
    ));

    // –î–û–ë–ê–í–õ–Ø–ï–ú: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —ç–∫—Ä–∞–Ω
    _checkAndRefreshAuth();

    // –î–û–ë–ê–í–ò–¢–¨ –≠–¢–£ –°–¢–†–û–ö–£:
    _loadActiveBatch(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  }

  // –ù–û–í–´–ô –ú–ï–¢–û–î –î–õ–Ø –û–¢–ö–†–´–¢–ò–Ø WHATSAPP –ì–†–£–ü–ü–´
  Future<void> _openWhatsAppGroup() async {
    try {
      final Uri whatsappUrl = Uri.parse(WHATSAPP_GROUP_LINK);

      if (await canLaunchUrl(whatsappUrl)) {
        await launchUrl(
          whatsappUrl,
          mode: LaunchMode.externalApplication,
        );
      } else {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(
              content: Text('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å WhatsApp'),
              action: SnackBarAction(
                label: 'OK',
                onPressed: () {},
              ),
            ),
          );
        }
      }
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ WhatsApp: $e');
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É'),
          ),
        );
      }
    }
  }

  // –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ—Ä—Å–∏–∏
  Future<void> _loadAppVersion() async {
    final packageInfo = await PackageInfo.fromPlatform();
    if (mounted) {
      setState(() {
        _appVersion = '${packageInfo.version} (${packageInfo.buildNumber})';
      });
    }
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ú–ï–¢–û–î - –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  Future<void> _checkForUpdates() async {
    final updateService = UpdateService(); // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ

    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => Center(
        child: CircularProgressIndicator(),
      ),
    );

    final updateInfo = await updateService.checkForUpdate();

    if (mounted) Navigator.of(context).pop();

    if (updateInfo != null && mounted) {
      updateService.showUpdateDialog(context, updateInfo);
    } else if (mounted) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('–£ –≤–∞—Å –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'),
          backgroundColor: Colors.green,
        ),
      );
    }
  }

  // –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ú–ï–¢–û–î - –¥–∏–∞–ª–æ–≥ "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏" —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
  void _showAboutDialog() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return Dialog(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20),
          ),
          child: Container(
            constraints: BoxConstraints(
              maxHeight: MediaQuery.of(context).size.height * 0.8,
              maxWidth: 400,
            ),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                Container(
                  padding: EdgeInsets.all(20),
                  decoration: BoxDecoration(
                    color: Colors.blue,
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(20),
                      topRight: Radius.circular(20),
                    ),
                  ),
                  child: Row(
                    children: [
                      Container(
                        padding: EdgeInsets.all(8),
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(10),
                        ),
                        child: Icon(
                          Icons.shopping_basket,
                          color: Colors.blue,
                          size: 24,
                        ),
                      ),
                      SizedBox(width: 12),
                      Expanded(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              '–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞',
                              style: TextStyle(
                                color: Colors.white,
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            Text(
                              '–í–µ—Ä—Å–∏—è $_appVersion',
                              style: TextStyle(
                                color: Colors.white70,
                                fontSize: 12,
                              ),
                            ),
                          ],
                        ),
                      ),
                      IconButton(
                        icon: Icon(Icons.close, color: Colors.white),
                        onPressed: () => Navigator.of(context).pop(),
                      ),
                    ],
                  ),
                ),

                // –ö–æ–Ω—Ç–µ–Ω—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
                Flexible(
                  child: SingleChildScrollView(
                    padding: EdgeInsets.all(20),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        _buildInstructionSection(
                          'üéØ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç',
                          [
                            '–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞ - —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫ –¥–ª—è –∂–∏—Ç–µ–ª–µ–π –£—Å—Ç—å-–ù–µ—Ä—ã.',
                            '–ú—ã –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞–∫–∞–∑—ã –∂–∏—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–ø—Ç–æ–≤—ã–µ —Ü–µ–Ω—ã –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤.',
                          ],
                        ),

                        _buildInstructionSection(
                          '–ü—Ä–æ–µ–∫—Ç –∏–º–µ–µ—Ç –≤—ã—Å–æ–∫—É—é —Å—Ç–µ–ø–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∏–¥–Ω–∞ –ª–∏—à—å –º–∞–ª–∞—è —á–∞—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–±—ã—Ç–∏–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å–∏–º –æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø—É—Ç—ë–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É WhatsApp "–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞", –≥–¥–µ –º–æ–∂–Ω–æ —Å–æ–æ–±—â–∞—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏ –≤–Ω–æ—Å–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –¢–∞–∫–∂–µ —Ç–∞–º –±—É–¥–µ—Ç –≤—Å—è –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.',
                          [],
                        ),

                        _buildInstructionSection(
                          'üõí –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑',
                          [
                            '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ö–∞—Ç–∞–ª–æ–≥"',
                            '2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤',
                            '3. –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–∂–º–∏—Ç–µ "–í –∫–æ—Ä–∑–∏–Ω—É"',
                            '4. –¢–æ–≤–∞—Ä—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω–µ –¥–∞–∂–µ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                            '5. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ö–æ—Ä–∑–∏–Ω—É" –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞',
                            '6. –ö–Ω–æ–ø–∫–∞ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑" –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –∫–æ–≥–¥–∞ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–∫—É–ø–∫–∏.',
                          ],
                        ),

                        _buildInstructionSection(
                          'üí≥ –û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞',
                          [
                            '‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è 100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞',
                            '‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∫–∞—Ä—Ç—ã –ú–ò–† —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ÆKassa',
                            '‚Ä¢ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É',
                            '‚Ä¢ –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã',
                            '‚Ä¢ –û–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –Ω–µ –Ω–∞–±—Ä–∞–Ω–∞ –æ–±—â–∞—è —Ü–µ–ª–µ–≤–∞—è —Å—É–º–º–∞ –∑–∞–∫—É–ø–∫–∏',
                            '‚Ä¢ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤ –æ–∫–Ω–µ –ÆKassa –∑–∞–∫—Ä–æ–π—Ç–µ –µ–≥–æ –∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.',
                          ],
                        ),

                        _buildInstructionSection(
                          'üöõ –î–æ—Å—Ç–∞–≤–∫–∞',
                          [
                            '‚Ä¢ –ú–∞—à–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–±–æ—Ä–∞ —Ü–µ–ª–µ–≤–æ–π —Å—É–º–º—ã –∑–∞–∫—É–ø–∫–∏',
                            '‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–∫—É–ø–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–æ—Ñ–∏–ª—å"',
                            '‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏–ª–∏ –≤ –≥—Ä—É–ø–ø–µ WhatsApp.',
                            '‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ SMS –∫–æ–≥–¥–∞ –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ',
                            '‚Ä¢ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 7-14 –¥–Ω–µ–π –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–∞—à–∏–Ω—ã',
                          ],
                        ),

                        _buildInstructionSection(
                          'üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤',
                          [
                            '‚Ä¢ –í—Å–µ –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ó–∞–∫–∞–∑—ã"',
                            '‚Ä¢ –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:',
                            '  - –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã (–æ—Ä–∞–Ω–∂–µ–≤—ã–π)',
                            '  - –û–ø–ª–∞—á–µ–Ω (–∑–µ–ª–µ–Ω—ã–π)',
                            '  - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω (—Å–∏–Ω–∏–π)',
                            '  - –î–æ—Å—Ç–∞–≤–ª–µ–Ω (–∑–µ–ª–µ–Ω—ã–π)',
                            '  - –û—Ç–º–µ–Ω–µ–Ω (–∫—Ä–∞—Å–Ω—ã–π)',
                          ],
                        ),

                        _buildInstructionSection(
                          'üéØ –¶–µ–ª–µ–≤–∞—è —Å—É–º–º–∞ –∑–∞–∫—É–ø–∫–∏',
                          [
                            '‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–∞—à–∏–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ',
                            '‚Ä¢ –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–∫–∞–∑–∞–Ω –≤ –≤–∏–¥–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞',
                            '‚Ä¢ –ú–∞—à–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏',
                            '‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å—É–º–º—ã!',
                          ],
                        ),

                        _buildInstructionSection(
                          'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                          [
                            '‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
                            '‚Ä¢ –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø–æ—è–≤–∏—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∞–∫—Ç—É–∞–ª—å–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è Android). –í –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –Ω–∞ iOS –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.',
                            '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å" –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏',
                            '‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
                            '‚Ä¢ –í–∞–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏',
                          ],
                        ),

                        _buildInstructionSection(
                          'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
                          [
                            'üìß Email: sevkorzina@gmail.com',
                            'üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (914) 266-75-82',
                            '‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç 9:00-18:00',
                            'üìç –ê–¥—Ä–µ—Å: –†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è), –ø–æ—Å. –£—Å—Ç—å-–ù–µ—Ä–∞',
                          ],
                        ),

                        SizedBox(height: 16),

                        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ
                        Container(
                          padding: EdgeInsets.all(16),
                          decoration: BoxDecoration(
                            color: Colors.grey[100],
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Column(
                            children: [
                              Text(
                                '¬© 2025 –°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞',
                                style: TextStyle(
                                  fontWeight: FontWeight.bold,
                                  color: Colors.grey[700],
                                ),
                              ),
                              SizedBox(height: 4),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                ),

                // –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–æ–π
                Container(
                  padding: EdgeInsets.all(16),
                  decoration: BoxDecoration(
                    color: Colors.grey[50],
                    borderRadius: BorderRadius.only(
                      bottomLeft: Radius.circular(20),
                      bottomRight: Radius.circular(20),
                    ),
                  ),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      TextButton.icon(
                        onPressed: () => Navigator.of(context).pop(),
                        icon: Icon(Icons.check_circle),
                        label: Text('–ü–æ–Ω—è—Ç–Ω–æ'),
                        style: TextButton.styleFrom(
                          foregroundColor: Colors.blue,
                          padding: EdgeInsets.symmetric(
                            horizontal: 24,
                            vertical: 12,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ü–∏–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  Widget _buildInstructionSection(String title, List<String> items) {
    return Padding(
      padding: EdgeInsets.only(bottom: 20),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.bold,
              color: Colors.blue[700],
            ),
          ),
          SizedBox(height: 8),
          ...items
              .map((item) => Padding(
                    padding: EdgeInsets.only(bottom: 4, left: 8),
                    child: Text(
                      item,
                      style: TextStyle(
                        fontSize: 14,
                        color: item.startsWith('Q:')
                            ? Colors.grey[700]
                            : item.startsWith('A:')
                                ? Colors.blue[600]
                                : Colors.grey[600],
                        fontWeight:
                            item.startsWith('Q:') || item.startsWith('A:')
                                ? FontWeight.w600
                                : FontWeight.normal,
                        height: 1.4,
                      ),
                    ),
                  ))
              .toList(),
        ],
      ),
    );
  }

  // –ù–û–í–´–ô –ú–ï–¢–û–î - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ initState
  Future<void> _checkAndRefreshAuth() async {
    final authProvider = Provider.of<AuthProvider>(context, listen: false);

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–æ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!authProvider.isAuthenticated) {
      await authProvider.checkAuthStatus();
    }
  }

  /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–∫—É–ø–∫–∏ –∏–∑ API
  Future<void> _loadActiveBatch() async {
    setState(() {
      _isLoadingBatch = true;
      _batchError = null;
    });

    try {
      final response = await _apiService.getActiveBatch();

      if (response['success'] == true && response['batch'] != null) {
        setState(() {
          _batchData = response['batch'];
          _isLoadingBatch = false;
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        _updateProgressAnimation();

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
        _progressAnimationController.forward();
        if (_getProgress() > 0.8) {
          _pulseAnimationController.repeat(reverse: true);
        }
      } else {
        setState(() {
          _batchData = null;
          _isLoadingBatch = false;
          _batchError = response['message'] ?? '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫';
        });
      }
    } catch (e) {
      setState(() {
        _batchData = null;
        _isLoadingBatch = false;
        _batchError = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: $e';
      });
    }
  }

// 5. –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã:

  /// –û–±–Ω–æ–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  void _updateProgressAnimation() {
    if (_batchData != null) {
      final progress = _getProgress();
      _progressAnimation = Tween<double>(
        begin: 0.0,
        end: progress,
      ).animate(CurvedAnimation(
        parent: _progressAnimationController,
        curve: Curves.easeInOut,
      ));
    }
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∫ —á–∏—Å–ª–æ –æ—Ç 0.0 –¥–æ 1.0
  double _getProgress() {
    if (_batchData == null) return 0.0;

    final current = (_batchData!['currentAmount'] ?? 0).toDouble();
    final target = (_batchData!['targetAmount'] ?? 1).toDouble();

    if (target <= 0) return 0.0;
    return math.min(current / target, 1.0);
  }

  @override
  void dispose() {
    _progressAnimationController.dispose();
    _pulseAnimationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('–ü—Ä–æ—Ñ–∏–ª—å'),
        backgroundColor: Colors.blue,
        foregroundColor: Colors.white,
        elevation: 0,
      ),
      body: Consumer<AuthProvider>(
        builder: (context, authProvider, child) {
          if (!authProvider.isAuthenticated) {
            return _buildUnauthenticatedView(context);
          }

          final user = authProvider.currentUser;
          if (user == null) {
            return _buildLoadingView();
          }

          return _buildAuthenticatedView(context, user, authProvider);
        },
      ),
    );
  }

  Widget _buildUnauthenticatedView(BuildContext context) {
    return Center(
      child: Padding(
        padding: EdgeInsets.all(24),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Container(
              width: 120,
              height: 120,
              decoration: BoxDecoration(
                color: Colors.grey[200],
                shape: BoxShape.circle,
              ),
              child: Icon(
                Icons.person_outline,
                size: 60,
                color: Colors.grey[400],
              ),
            ),
            SizedBox(height: 24),
            Text(
              '–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.grey[800],
              ),
            ),
            SizedBox(height: 12),
            Text(
              '–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Ñ–∏–ª—é –∏ –∑–∞–∫–∞–∑–∞–º',
              textAlign: TextAlign.center,
              style: TextStyle(
                fontSize: 16,
                color: Colors.grey[600],
              ),
            ),
            SizedBox(height: 32),
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () {
                  Navigator.of(context).pushReplacement(
                    MaterialPageRoute(
                      builder: (context) => AuthChoiceScreen(),
                    ),
                  );
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.blue,
                  foregroundColor: Colors.white,
                  padding: EdgeInsets.symmetric(vertical: 16),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                child: Text(
                  '–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç',
                  style: TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  // –ù–û–í–´–ô –í–ò–î–ñ–ï–¢ - –ö–∞—Ä—Ç–æ—á–∫–∞ WhatsApp –≥—Ä—É–ø–ø—ã
  Widget _buildWhatsAppGroupCard() {
    return Container(
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        children: [
          // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
          Container(
            padding: EdgeInsets.all(16),
            decoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [Colors.green[400]!, Colors.green[600]!],
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
              ),
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(16),
                topRight: Radius.circular(16),
              ),
            ),
            child: Row(
              children: [
                Container(
                  padding: EdgeInsets.all(8),
                  decoration: BoxDecoration(
                    color: Colors.white.withOpacity(0.2),
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Icon(
                    Icons.group,
                    color: Colors.white,
                    size: 24,
                  ),
                ),
                SizedBox(width: 12),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        '–ì—Ä—É–ø–ø–∞ "–°–µ–≤–µ—Ä–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞"',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      SizedBox(height: 2),
                      Text(
                        '–û–±—â–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                        style: TextStyle(
                          color: Colors.white.withOpacity(0.9),
                          fontSize: 12,
                        ),
                      ),
                    ],
                  ),
                ),
                Icon(
                  Icons.arrow_forward_ios,
                  color: Colors.white.withOpacity(0.8),
                  size: 16,
                ),
              ],
            ),
          ),

          // –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
          Padding(
            padding: EdgeInsets.all(16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  '–î–ª—è –æ–±—â–µ–π –ø–æ–ª—å–∑—ã –ø—Ä–æ—Å–∏–º –æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø—É—Ç—ë–º –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É WhatsApp "–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞".',
                  style: TextStyle(
                    fontSize: 14,
                    color: Colors.grey[700],
                    height: 1.4,
                  ),
                ),
                SizedBox(height: 12),
                Text(
                  '–í –≥—Ä—É–ø–ø–µ –≤—ã –º–æ–∂–µ—Ç–µ:',
                  style: TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.w600,
                    color: Colors.grey[800],
                  ),
                ),
                SizedBox(height: 8),
                _buildGroupFeature('üí¨ –û—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'),
                _buildGroupFeature('üêõ –°–æ–æ–±—â–∞—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö'),
                _buildGroupFeature('üì¢ –ü–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é'),
                _buildGroupFeature('ü§ù –û–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏'),
                SizedBox(height: 16),

                // –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –≥—Ä—É–ø–ø–µ
                SizedBox(
                  width: double.infinity,
                  child: ElevatedButton.icon(
                    onPressed: _openWhatsAppGroup,
                    icon: Image.asset(
                      'assets/images/whatsapp_icon.png', // –î–æ–±–∞–≤—å—Ç–µ –∏–∫–æ–Ω–∫—É WhatsApp –≤ assets
                      width: 24,
                      height: 24,
                      errorBuilder: (context, error, stackTrace) {
                        // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∫–æ–Ω–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é
                        return Icon(Icons.chat, color: Colors.white);
                      },
                    ),
                    label: Text(
                      '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–µ WhatsApp',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.green[600],
                      foregroundColor: Colors.white,
                      padding: EdgeInsets.symmetric(vertical: 14),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                      elevation: 2,
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≥—Ä—É–ø–ø—ã
  Widget _buildGroupFeature(String text) {
    return Padding(
      padding: EdgeInsets.only(bottom: 6),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(width: 8),
          Expanded(
            child: Text(
              text,
              style: TextStyle(
                fontSize: 13,
                color: Colors.grey[600],
                height: 1.3,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildLoadingView() {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          CircularProgressIndicator(color: Colors.blue),
          SizedBox(height: 16),
          Text(
            '–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...',
            style: TextStyle(
              fontSize: 16,
              color: Colors.grey[600],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAuthenticatedView(
      BuildContext context, user, AuthProvider authProvider) {
    return SingleChildScrollView(
      padding: EdgeInsets.all(16),
      child: Column(
        children: [
          // –ü–ê–ù–ï–õ–¨ –¶–ï–õ–ï–í–û–ô –°–£–ú–ú–´ - –ì–õ–ê–í–ù–ê–Ø –§–ò–ß–ê
          _buildBatchProgressCard(),

          SizedBox(height: 12),

          // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
          _buildUserInfoCard(user),

          SizedBox(height: 12),

          // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è
          _buildSettingsCard(context, authProvider),

          SizedBox(height: 12),

          // –î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ö–£ - WhatsApp –≥—Ä—É–ø–ø–∞
          _buildWhatsAppGroupCard(),

          _buildAboutSection(), // –ù–û–í–ê–Ø –°–ï–ö–¶–ò–Ø
          // _buildAboutSectionAlternative(), // –í–∞—Ä–∏–∞–Ω—Ç 2: –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
          SizedBox(height: 16),

          // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
          _buildLogoutButton(context, authProvider),
        ],
      ),
    );
  }

  // –ö–û–ú–ü–ê–ö–¢–ù–ê–Ø —Å–µ–∫—Ü–∏—è "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
  Widget _buildAboutSection() {
    return Column(
      children: [
        // –ö–Ω–æ–ø–∫–∞ "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
        InkWell(
          onTap: _showAboutDialog,
          borderRadius: BorderRadius.circular(12),
          child: Container(
            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 12),
            margin: EdgeInsets.only(bottom: 8),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(12),
              border: Border.all(color: Colors.grey[300]!),
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.03),
                  blurRadius: 8,
                  offset: Offset(0, 2),
                ),
              ],
            ),
            child: Row(
              children: [
                Container(
                  padding: EdgeInsets.all(8),
                  decoration: BoxDecoration(
                    color: Colors.blue[50],
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Icon(
                    Icons.info_outline,
                    color: Colors.blue,
                    size: 20,
                  ),
                ),
                SizedBox(width: 12),
                Expanded(
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
                        style: TextStyle(
                          fontSize: 14,
                          fontWeight: FontWeight.w600,
                          color: Colors.grey[800],
                        ),
                      ),
                      Text(
                        '–í–µ—Ä—Å–∏—è $_appVersion',
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.grey[500],
                        ),
                      ),
                    ],
                  ),
                ),
                SizedBox(width: 8),
                Icon(
                  Icons.chevron_right,
                  color: Colors.grey[400],
                  size: 20,
                ),
              ],
            ),
          ),
        ),

        // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        InkWell(
          onTap: _checkForUpdates,
          borderRadius: BorderRadius.circular(12),
          child: Container(
            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 12),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(12),
              border: Border.all(color: Colors.grey[300]!),
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.03),
                  blurRadius: 8,
                  offset: Offset(0, 2),
                ),
              ],
            ),
            child: Row(
              children: [
                Container(
                  padding: EdgeInsets.all(8),
                  decoration: BoxDecoration(
                    color: Colors.green[50],
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Icon(
                    Icons.system_update,
                    color: Colors.green,
                    size: 20,
                  ),
                ),
                SizedBox(width: 12),
                Expanded(
                  child: Text(
                    '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w600,
                      color: Colors.grey[800],
                    ),
                  ),
                ),
                Icon(
                  Icons.chevron_right,
                  color: Colors.grey[400],
                  size: 20,
                ),
              ],
            ),
          ),
        ),
      ],
    );
  }

  // // –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –í–ê–†–ò–ê–ù–¢ - –ï—â–µ –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π (–æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏)
  // Widget _buildAboutSectionAlternative() {
  //   return Row(
  //     children: [
  //       // –ö–Ω–æ–ø–∫–∞ "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
  //       Expanded(
  //         child: InkWell(
  //           onTap: _showAboutDialog,
  //           borderRadius: BorderRadius.circular(12),
  //           child: Container(
  //             padding: EdgeInsets.all(12),
  //             decoration: BoxDecoration(
  //               color: Colors.white,
  //               borderRadius: BorderRadius.circular(12),
  //               border: Border.all(color: Colors.grey[300]!),
  //               boxShadow: [
  //                 BoxShadow(
  //                   color: Colors.black.withOpacity(0.03),
  //                   blurRadius: 8,
  //                   offset: Offset(0, 2),
  //                 ),
  //               ],
  //             ),
  //             child: Column(
  //               children: [
  //                 Container(
  //                   padding: EdgeInsets.all(10),
  //                   decoration: BoxDecoration(
  //                     color: Colors.blue[50],
  //                     borderRadius: BorderRadius.circular(10),
  //                   ),
  //                   child: Icon(
  //                     Icons.info_outline,
  //                     color: Colors.blue,
  //                     size: 24,
  //                   ),
  //                 ),
  //                 SizedBox(height: 8),
  //                 Text(
  //                   '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
  //                   style: TextStyle(
  //                     fontSize: 12,
  //                     fontWeight: FontWeight.w600,
  //                     color: Colors.grey[800],
  //                   ),
  //                   textAlign: TextAlign.center,
  //                 ),
  //                 SizedBox(height: 2),
  //                 Text(
  //                   'v$_appVersion',
  //                   style: TextStyle(
  //                     fontSize: 10,
  //                     color: Colors.grey[500],
  //                   ),
  //                 ),
  //               ],
  //             ),
  //           ),
  //         ),
  //       ),

  //       SizedBox(width: 12),

  //       // –ö–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è"
  //       Expanded(
  //         child: InkWell(
  //           onTap: _checkForUpdates,
  //           borderRadius: BorderRadius.circular(12),
  //           child: Container(
  //             padding: EdgeInsets.all(12),
  //             decoration: BoxDecoration(
  //               color: Colors.white,
  //               borderRadius: BorderRadius.circular(12),
  //               border: Border.all(color: Colors.grey[300]!),
  //               boxShadow: [
  //                 BoxShadow(
  //                   color: Colors.black.withOpacity(0.03),
  //                   blurRadius: 8,
  //                   offset: Offset(0, 2),
  //                 ),
  //               ],
  //             ),
  //             child: Column(
  //               children: [
  //                 Container(
  //                   padding: EdgeInsets.all(10),
  //                   decoration: BoxDecoration(
  //                     color: Colors.green[50],
  //                     borderRadius: BorderRadius.circular(10),
  //                   ),
  //                   child: Icon(
  //                     Icons.system_update,
  //                     color: Colors.green,
  //                     size: 24,
  //                   ),
  //                 ),
  //                 SizedBox(height: 8),
  //                 Text(
  //                   '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è',
  //                   style: TextStyle(
  //                     fontSize: 12,
  //                     fontWeight: FontWeight.w600,
  //                     color: Colors.grey[800],
  //                   ),
  //                   textAlign: TextAlign.center,
  //                 ),
  //                 SizedBox(height: 2),
  //                 Text(
  //                   '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å',
  //                   style: TextStyle(
  //                     fontSize: 10,
  //                     color: Colors.grey[500],
  //                   ),
  //                 ),
  //               ],
  //             ),
  //           ),
  //         ),
  //       ),
  //     ],
  //   );
  // }

  // ================== –ü–ê–ù–ï–õ–¨ –¶–ï–õ–ï–í–û–ô –°–£–ú–ú–´ - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø ==================
  Widget _buildBatchProgressCard() {
    // –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
    if (_isLoadingBatch) {
      return Container(
        height: 200,
        decoration: BoxDecoration(
          color: Colors.grey[50],
          borderRadius: BorderRadius.circular(20),
          border: Border.all(color: Colors.grey[200]!),
        ),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              CircularProgressIndicator(),
              SizedBox(height: 16),
              Text(
                '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–∫–∏...',
                style: TextStyle(color: Colors.grey[600]),
              ),
            ],
          ),
        ),
      );
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    if (_batchError != null) {
      return Container(
        padding: EdgeInsets.all(20),
        decoration: BoxDecoration(
          color: Colors.orange[50],
          borderRadius: BorderRadius.circular(20),
          border: Border.all(color: Colors.orange[200]!),
        ),
        child: Column(
          children: [
            Icon(
              Icons.info_outline,
              size: 48,
              color: Colors.orange,
            ),
            SizedBox(height: 16),
            Text(
              _batchError!,
              textAlign: TextAlign.center,
              style: TextStyle(
                fontSize: 16,
                color: Colors.grey[700],
              ),
            ),
            SizedBox(height: 16),
            ElevatedButton.icon(
              onPressed: _loadActiveBatch,
              icon: Icon(Icons.refresh),
              label: Text('–û–±–Ω–æ–≤–∏—Ç—å'),
            ),
          ],
        ),
      );
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
    if (_batchData == null) {
      return SizedBox.shrink();
    }

    // –û–°–¢–ê–õ–¨–ù–û–ô –ö–û–î –û–°–¢–ê–ï–¢–°–Ø –¢–ê–ö –ñ–ï, –¢–û–õ–¨–ö–û –ó–ê–ú–ï–ù–ò–¢–¨ _batchData –ù–ê _batchData!:
    final progress = _getProgress(); // –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –ù–û–í–´–ô –ú–ï–¢–û–î
    final progressPercent = (progress * 100).round();

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    Color getProgressColor() {
      if (progress < 0.3) return Colors.red;
      if (progress < 0.7) return Colors.orange;
      if (progress < 0.9) return Colors.blue;
      return Colors.green;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    String getMotivationalText() {
      if (progress < 0.3) return '–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! üöÄ';
      if (progress < 0.5) return '–û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ! üí™';
      if (progress < 0.7) return '–ë–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º! üî•';
      if (progress < 0.9) return '–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä—ã–≤–æ–∫! ‚ö°';
      if (progress < 1.0) return '–ï—â—ë —á—É—Ç—å-—á—É—Ç—å! üéØ';
      return '–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –ì–æ—Ç–æ–≤–∏–º –º–∞—à–∏–Ω—É! üöõ';
    }

    return AnimatedBuilder(
      animation: _pulseAnimation,
      builder: (context, child) {
        return Transform.scale(
          scale: progress > 0.8 ? _pulseAnimation.value : 1.0,
          child: Container(
            decoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [
                  getProgressColor().withOpacity(0.1),
                  getProgressColor().withOpacity(0.05),
                ],
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
              ),
              borderRadius: BorderRadius.circular(20),
              border: Border.all(
                color: getProgressColor().withOpacity(0.3),
                width: 2,
              ),
            ),
            child: Padding(
              padding: EdgeInsets.all(20),
              child: Column(
                children: [
                  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                  Row(
                    children: [
                      Container(
                        padding: EdgeInsets.all(8),
                        decoration: BoxDecoration(
                          color: getProgressColor().withOpacity(0.2),
                          borderRadius: BorderRadius.circular(12),
                        ),
                        child: Icon(
                          Icons.trending_up,
                          color: getProgressColor(),
                          size: 24,
                        ),
                      ),
                      SizedBox(width: 12),
                      Expanded(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              'üéØ –¢–ï–ö–£–©–ê–Ø –ó–ê–ö–£–ü–ö–ê',
                              style: TextStyle(
                                fontSize: 12,
                                fontWeight: FontWeight.bold,
                                color: getProgressColor(),
                                letterSpacing: 1.2,
                              ),
                            ),
                            Text(
                              _batchData!['title'] ??
                                  '–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞–∫—É–ø–∫–∞', // –ó–ê–ú–ï–ù–ò–¢–¨
                              style: TextStyle(
                                fontSize: 16,
                                fontWeight: FontWeight.bold,
                                color: Colors.grey[800],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),

                  SizedBox(height: 20),

                  // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                  AnimatedBuilder(
                    animation: _progressAnimation,
                    builder: (context, child) {
                      return Column(
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Text(
                                '${_formatCurrency((_batchData!['currentAmount'] ?? 0).toInt())}', // –ó–ê–ú–ï–ù–ò–¢–¨
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                  color: getProgressColor(),
                                ),
                              ),
                              Text(
                                '$progressPercent%',
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                  color: getProgressColor(),
                                ),
                              ),
                            ],
                          ),
                          SizedBox(height: 8),
                          Container(
                            height: 12,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(6),
                              color: Colors.grey[200],
                            ),
                            child: ClipRRect(
                              borderRadius: BorderRadius.circular(6),
                              child: LinearProgressIndicator(
                                value: _progressAnimation.value,
                                backgroundColor: Colors.transparent,
                                valueColor: AlwaysStoppedAnimation<Color>(
                                  getProgressColor(),
                                ),
                              ),
                            ),
                          ),
                          SizedBox(height: 8),
                          Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Text(
                                '–°–æ–±—Ä–∞–Ω–æ',
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.grey[600],
                                ),
                              ),
                              Text(
                                '–¶–µ–ª—å: ${_formatCurrency((_batchData!['targetAmount'] ?? 0).toInt())}', // –ó–ê–ú–ï–ù–ò–¢–¨
                                style: TextStyle(
                                  fontSize: 12,
                                  color: Colors.grey[600],
                                ),
                              ),
                            ],
                          ),
                        ],
                      );
                    },
                  ),

                  SizedBox(height: 16),

                  // –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                    decoration: BoxDecoration(
                      color: getProgressColor().withOpacity(0.1),
                      borderRadius: BorderRadius.circular(20),
                    ),
                    child: Text(
                      getMotivationalText(),
                      style: TextStyle(
                        fontSize: 14,
                        fontWeight: FontWeight.w600,
                        color: getProgressColor(),
                      ),
                    ),
                  ),

                  SizedBox(height: 16),

                  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                  Row(
                    children: [
                      Expanded(
                        child: _buildStatItem(
                          icon: Icons.people,
                          label: '–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
                          value:
                              '${_batchData!['participantsCount'] ?? 0}', // –ó–ê–ú–ï–ù–ò–¢–¨
                          color: Colors.blue,
                        ),
                      ),
                      Container(
                        width: 1,
                        height: 40,
                        color: Colors.grey[300],
                      ),
                      Expanded(
                        child: _buildStatItem(
                          icon: Icons.account_balance_wallet,
                          label: '–í–∞—à –≤–∫–ª–∞–¥',
                          value: _formatCurrency(
                              _safeDouble(_batchData!['userContribution'])
                                  .toInt()),
                          color: Colors.green,
                        ),
                      ),
                    ],
                  ),

                  SizedBox(height: 16),
                ],
              ),
            ),
          ),
        );
      },
    );
  }

  Widget _buildStatItem({
    required IconData icon,
    required String label,
    required String value,
    required Color color,
  }) {
    return Column(
      children: [
        Icon(icon, color: color, size: 20),
        SizedBox(height: 4),
        Text(
          value,
          style: TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.bold,
            color: color,
          ),
        ),
        Text(
          label,
          style: TextStyle(
            fontSize: 10,
            color: Colors.grey[600],
          ),
          textAlign: TextAlign.center,
        ),
      ],
    );
  }

  // ================== –í–°–ï –û–°–¢–ê–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ –û–°–¢–ê–Æ–¢–°–Ø –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô ==================
  Widget _buildUserInfoCard(user) {
    return Card(
      elevation: 2,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(16),
      ),
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          children: [
            // –ê–≤–∞—Ç–∞—Ä
            Container(
              width: 80,
              height: 80,
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [Colors.blue, Colors.blue[300]!],
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                ),
                shape: BoxShape.circle,
                boxShadow: [
                  BoxShadow(
                    color: Colors.blue.withOpacity(0.3),
                    blurRadius: 10,
                    offset: Offset(0, 4),
                  ),
                ],
              ),
              child: Center(
                child: Text(
                  user.initials,
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 32,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
            SizedBox(height: 16),

            Text(
              user.fullName,
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.grey[800],
              ),
            ),
            SizedBox(height: 8),

            Container(
              padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
              decoration: BoxDecoration(
                color: Colors.blue[50],
                borderRadius: BorderRadius.circular(20),
                border: Border.all(color: Colors.blue[200]!),
              ),
              child: Text(
                user.phone,
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.blue[700],
                  fontWeight: FontWeight.w500,
                ),
              ),
            ),

            if (user.email != null && user.email!.isNotEmpty) ...[
              SizedBox(height: 8),
              Text(
                user.email!,
                style: TextStyle(
                  fontSize: 14,
                  color: Colors.grey[500],
                ),
              ),
            ],
          ],
        ),
      ),
    );
  }

  // –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤–º–µ—Å—Ç–æ –±–æ–ª—å—à–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  Widget _buildSettingsCard(BuildContext context, AuthProvider authProvider) {
    return InkWell(
      onTap: () {
        _loadActiveBatch();
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã'),
            backgroundColor: Colors.green,
            duration: Duration(seconds: 2),
          ),
        );
      },
      borderRadius: BorderRadius.circular(12),
      child: Container(
        padding: EdgeInsets.symmetric(horizontal: 16, vertical: 12),
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(12),
          border: Border.all(color: Colors.grey[300]!),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.03),
              blurRadius: 8,
              offset: Offset(0, 2),
            ),
          ],
        ),
        child: Row(
          children: [
            Container(
              padding: EdgeInsets.all(8),
              decoration: BoxDecoration(
                color: Colors.blue[50],
                borderRadius: BorderRadius.circular(8),
              ),
              child: Icon(
                Icons.refresh,
                color: Colors.blue,
                size: 20,
              ),
            ),
            SizedBox(width: 12),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  Text(
                    '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ',
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w600,
                      color: Colors.grey[800],
                    ),
                  ),
                  Text(
                    '–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫—É–ø–∫–µ',
                    style: TextStyle(
                      fontSize: 12,
                      color: Colors.grey[500],
                    ),
                  ),
                ],
              ),
            ),
            Icon(
              Icons.chevron_right,
              color: Colors.grey[400],
              size: 20,
            ),
          ],
        ),
      ),
    );
  }

  // Widget _buildSettingItem({
  //   required IconData icon,
  //   required String title,
  //   required String subtitle,
  //   required VoidCallback onTap,
  // }) {
  //   return ListTile(
  //     contentPadding: EdgeInsets.zero,
  //     leading: Container(
  //       padding: EdgeInsets.all(8),
  //       decoration: BoxDecoration(
  //         color: Colors.grey[100],
  //         borderRadius: BorderRadius.circular(8),
  //       ),
  //       child: Icon(icon, color: Colors.grey[600], size: 20),
  //     ),
  //     title: Text(
  //       title,
  //       style: TextStyle(
  //         fontWeight: FontWeight.w600,
  //         color: Colors.grey[800],
  //       ),
  //     ),
  //     subtitle: Text(
  //       subtitle,
  //       style: TextStyle(
  //         fontSize: 12,
  //         color: Colors.grey[500],
  //       ),
  //     ),
  //     trailing: Icon(
  //       Icons.chevron_right,
  //       color: Colors.grey[400],
  //     ),
  //     onTap: onTap,
  //   );
  // }

  Widget _buildLogoutButton(BuildContext context, AuthProvider authProvider) {
    return SizedBox(
      width: double.infinity,
      child: ElevatedButton(
        onPressed: authProvider.isLoading
            ? null
            : () => _showLogoutDialog(context, authProvider),
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.red[50],
          foregroundColor: Colors.red[700],
          elevation: 0,
          padding: EdgeInsets.symmetric(vertical: 16),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12),
            side: BorderSide(color: Colors.red[200]!),
          ),
        ),
        child: authProvider.isLoading
            ? SizedBox(
                width: 20,
                height: 20,
                child: CircularProgressIndicator(
                  strokeWidth: 2,
                  color: Colors.red[700],
                ),
              )
            : Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.logout, size: 20),
                  SizedBox(width: 8),
                  Text(
                    '–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞',
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ],
              ),
      ),
    );
  }

  String _formatCurrency(int amount) {
    if (amount >= 1000000) {
      return '${(amount / 1000000).toStringAsFixed(1)} –º–ª–Ω ‚ÇΩ';
    } else if (amount >= 1000) {
      return '${(amount / 1000).toStringAsFixed(0)} —Ç—ã—Å ‚ÇΩ';
    } else {
      return '$amount ‚ÇΩ';
    }
  }

  void _showBatchDetails() {
    // –û–ë–ù–û–í–ò–¢–¨ –≠–¢–û–¢ –ú–ï–¢–û–î –î–õ–Ø –†–ê–ë–û–¢–´ –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò:
    if (_batchData == null) return;

    showModalBottomSheet(
      context: context,
      isScrollControlled: true,
      backgroundColor: Colors.transparent,
      builder: (context) => Container(
        height: MediaQuery.of(context).size.height * 0.7,
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.vertical(
            top: Radius.circular(20),
          ),
        ),
        child: Padding(
          padding: EdgeInsets.all(20),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // –ó–∞–≥–æ–ª–æ–≤–æ–∫
              Row(
                children: [
                  Expanded(
                    child: Text(
                      '–î–µ—Ç–∞–ª–∏ –∑–∞–∫—É–ø–∫–∏',
                      style: TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                  IconButton(
                    onPressed: () => Navigator.pop(context),
                    icon: Icon(Icons.close),
                  ),
                ],
              ),

              SizedBox(height: 20),

              // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫—É–ø–∫–µ - –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï
              _buildDetailItem(
                  '–ù–∞–∑–≤–∞–Ω–∏–µ', _batchData!['title'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
              _buildDetailItem('–°—Ç–∞—Ç—É—Å', '–ê–∫—Ç–∏–≤–Ω–∞—è'),
              _buildDetailItem('–°–æ–±—Ä–∞–Ω–æ',
                  '${_formatCurrency((_batchData!['currentAmount'] ?? 0).toInt())} –∏–∑ ${_formatCurrency((_batchData!['targetAmount'] ?? 0).toInt())}'),
              _buildDetailItem('–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
                  '${_batchData!['participantsCount'] ?? 0} —á–µ–ª–æ–≤–µ–∫'),
              _buildDetailItem(
                  '–í–∞—à –≤–∫–ª–∞–¥',
                  _formatCurrency(
                      (_batchData!['userContribution'] ?? 0).toInt())),

              SizedBox(height: 20),

              // –ü—Ä–æ–≥–Ω–æ–∑
              Container(
                padding: EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.blue[50],
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Colors.blue[200]!),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Icon(Icons.analytics, color: Colors.blue, size: 20),
                        SizedBox(width: 8),
                        Text(
                          '–ü—Ä–æ–≥–Ω–æ–∑',
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.blue[800],
                          ),
                        ),
                      ],
                    ),
                    SizedBox(height: 8),
                    Text(
                      '–ü—Ä–∏ —Ç–µ–∫—É—â–∏—Ö —Ç–µ–º–ø–∞—Ö —Ü–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ú–∞—à–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –∑–∞ —Ç–æ–≤–∞—Ä–∞–º–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–π —Å—É–º–º—ã.',
                      style: TextStyle(
                        color: Colors.blue[700],
                        fontSize: 14,
                      ),
                    ),
                  ],
                ),
              ),

              Spacer(),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildDetailItem(String label, String value) {
    return Padding(
      padding: EdgeInsets.symmetric(vertical: 8),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(
            width: 120,
            child: Text(
              label,
              style: TextStyle(
                color: Colors.grey[600],
                fontSize: 14,
              ),
            ),
          ),
          Expanded(
            child: Text(
              value,
              style: TextStyle(
                fontWeight: FontWeight.w600,
                fontSize: 14,
              ),
            ),
          ),
        ],
      ),
    );
  }

  void _showEditProfileDialog(BuildContext context, AuthProvider authProvider) {
    final user = authProvider.currentUser!;
    final firstNameController = TextEditingController(text: user.name);
    final lastNameController = TextEditingController(text: user.lastName ?? '');
    final emailController = TextEditingController(text: user.email ?? '');

    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: Text('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            TextField(
              controller: firstNameController,
              decoration: InputDecoration(
                labelText: '–ò–º—è',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            TextField(
              controller: lastNameController,
              decoration: InputDecoration(
                labelText: '–§–∞–º–∏–ª–∏—è',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            TextField(
              controller: emailController,
              decoration: InputDecoration(
                labelText: 'Email',
                border: OutlineInputBorder(),
              ),
              keyboardType: TextInputType.emailAddress,
            ),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: Text('–û—Ç–º–µ–Ω–∞'),
          ),
          ElevatedButton(
            onPressed: () async {
              final success = await authProvider.updateUserProfile(
                firstName: firstNameController.text,
                lastName: lastNameController.text,
                email: emailController.text,
              );

              Navigator.pop(context);

              if (success) {
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(
                    content: Text('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω'),
                    backgroundColor: Colors.green,
                  ),
                );
              } else {
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(
                    content: Text('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è'),
                    backgroundColor: Colors.red,
                  ),
                );
              }
            },
            child: Text('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'),
          ),
        ],
      ),
    );
  }

  double _safeDouble(dynamic value) {
    if (value == null) return 0.0;
    if (value is double) return value;
    if (value is int) return value.toDouble();
    if (value is String) return double.tryParse(value) ?? 0.0;
    return 0.0;
  }

  void _showLogoutDialog(BuildContext context, AuthProvider authProvider) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: Text('–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞'),
        content: Text('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞?'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: Text('–û—Ç–º–µ–Ω–∞'),
          ),
          ElevatedButton(
            onPressed: () async {
              Navigator.pop(context);
              await authProvider.logout();

              // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
              Navigator.of(context).pushReplacement(
                MaterialPageRoute(
                  builder: (context) => AuthChoiceScreen(),
                ),
              );
            },
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.red,
              foregroundColor: Colors.white,
            ),
            child: Text('–í—ã–π—Ç–∏'),
          ),
        ],
      ),
    );
  }
}
