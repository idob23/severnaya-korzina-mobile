// lib/screens/home/home_screen.dart - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ë–ï–ô–î–ñ–ï–ú
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../providers/auth_provider.dart';
import '../../providers/cart_provider.dart';
import '../../services/api_service.dart';
import '../catalog/catalog_screen.dart';
import '../maintenance_screen.dart';
import '../cart/cart_screen.dart';
import '../orders/orders_screen.dart';
import '../profile/profile_screen.dart';
import 'dart:async';

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> with WidgetsBindingObserver {
  int _currentIndex = 0;
  Timer? _maintenanceCheckTimer;
  final ApiService _apiService = ApiService();

  final List<Widget> _screens = [
    CatalogScreen(),
    CartScreen(),
    OrdersScreen(),
    ProfileScreen(),
  ];

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addObserver(this);
    _startMaintenanceCheck();
  }

  @override
  void dispose() {
    WidgetsBinding.instance.removeObserver(this);
    _maintenanceCheckTimer?.cancel();
    super.dispose();
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    if (state == AppLifecycleState.resumed) {
      // –ö–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–∑ —Ñ–æ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
      print('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ—Å—å –∏–∑ —Ñ–æ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è');
      _checkMaintenanceStatus();
    }
  }

  void _startMaintenanceCheck() {
    // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    _checkMaintenanceStatus();

    // –ó–∞—Ç–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    _maintenanceCheckTimer = Timer.periodic(
      Duration(seconds: 30),
      (_) => _checkMaintenanceStatus(),
    );
  }

  Future<void> _checkMaintenanceStatus() async {
    try {
      print('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è...');

      final statusResponse = await _apiService.checkAppStatus();

      print('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: maintenance=${statusResponse['maintenance']}');

      // –ï—Å–ª–∏ —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω
      if (statusResponse['maintenance'] == true) {
        final maintenanceDetails = statusResponse['maintenance_details'];

        print(
            '‚ö†Ô∏è –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–µ–Ω! –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è');

        // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
        _maintenanceCheckTimer?.cancel();

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
        if (mounted) {
          Navigator.of(context).pushAndRemoveUntil(
            MaterialPageRoute(
              builder: (context) => MaintenanceScreen(
                message: maintenanceDetails?['message'] ??
                    '–ü—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.',
                endTime: maintenanceDetails?['end_time'],
              ),
            ),
            (route) => false,
          );
        }
      }
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _screens[_currentIndex],
      bottomNavigationBar: BottomNavigationBar(
        type: BottomNavigationBarType.fixed,
        currentIndex: _currentIndex,
        onTap: (index) => setState(() => _currentIndex = index),
        selectedItemColor: Colors.blue,
        unselectedItemColor: Colors.grey,
        items: [
          BottomNavigationBarItem(
            icon: Icon(Icons.store),
            label: '–ö–∞—Ç–∞–ª–æ–≥',
          ),
          BottomNavigationBarItem(
            // –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω Consumer –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
            icon: Consumer<CartProvider>(
              builder: (context, cart, child) {
                return Stack(
                  children: [
                    Icon(Icons.shopping_cart),
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–µ–π–¥–∂ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã
                    if (cart.totalItems > 0)
                      Positioned(
                        right: 0,
                        top: 0,
                        child: Container(
                          padding: EdgeInsets.all(2),
                          decoration: BoxDecoration(
                            color: Colors.red,
                            borderRadius: BorderRadius.circular(10),
                          ),
                          constraints: BoxConstraints(
                            minWidth: 16,
                            minHeight: 16,
                          ),
                          child: Text(
                            '${cart.totalItems}',
                            style: TextStyle(
                              color: Colors.white,
                              fontSize: 10,
                              fontWeight: FontWeight.bold,
                            ),
                            textAlign: TextAlign.center,
                          ),
                        ),
                      ),
                  ],
                );
              },
            ),
            label: '–ö–æ—Ä–∑–∏–Ω–∞',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.list_alt),
            label: '–ó–∞–∫–∞–∑—ã',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: '–ü—Ä–æ—Ñ–∏–ª—å',
          ),
        ],
      ),
    );
  }
}
