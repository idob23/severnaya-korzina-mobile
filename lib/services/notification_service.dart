// lib/services/notification_service.dart
import 'package:flutter/foundation.dart';

class NotificationService {
  static final NotificationService _instance = NotificationService._internal();
  factory NotificationService() => _instance;
  NotificationService._internal();

  bool _permissionRequested = false;
  String _permissionStatus = 'default';

  /// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ–±)
  Future<bool> requestPermission() async {
    if (!kIsWeb) return false;

    try {
      if (!_permissionRequested) {
        _permissionStatus = 'granted'; // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º
        _permissionRequested = true;

        if (kDebugMode) {
          print('üîî –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $_permissionStatus');
        }
      }

      return _permissionStatus == 'granted';
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      }
      return false;
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤ –∫–æ–Ω—Å–æ–ª—å)
  Future<void> showLocalNotification({
    required String title,
    required String body,
    String? icon,
    String? url,
  }) async {
    print('üîî –¢–ï–°–¢: showLocalNotification –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É');
    print('üîî –¢–ï–°–¢: title=$title, body=$body');

    // if (!kIsWeb) {
    //   print('üîî –¢–ï–°–¢: –ù–µ –≤–µ–±-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –≤—ã—Ö–æ–¥–∏–º');
    //   return;
    // }

    // print('üîî –¢–ï–°–¢: –í–µ–±-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');
    // if (!kIsWeb) return;

    try {
      final hasPermission = await requestPermission();
      if (!hasPermission) {
        if (kDebugMode) {
          print('‚ùå –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        }
        return;
      }

      // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
      if (kDebugMode) {
        print('üîî –£–í–ï–î–û–ú–õ–ï–ù–ò–ï: $title - $body');
      }

      // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      // –ü–æ–∫–∞ —á—Ç–æ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
      }
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
  Future<void> showOrderStatusNotification({
    required int orderId,
    required String oldStatus,
    required String newStatus,
  }) async {
    final statusMessages = _getStatusMessages(newStatus);

    await showLocalNotification(
      title: 'üéØ –ó–∞–∫–∞–∑ #$orderId',
      body: statusMessages['message']!,
      icon: statusMessages['icon'],
      url: '/#/orders/$orderId',
    );
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–∫–æ–Ω–∫—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
  Map<String, String> _getStatusMessages(String status) {
    switch (status) {
      case 'paid':
        return {
          'message': '–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω! –ì–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ',
          'icon': '/icons/Icon-192.png'
        };
      case 'confirmed':
        return {
          'message': '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏ –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É',
          'icon': '/icons/Icon-192.png'
        };
      case 'shipped':
        return {
          'message': '–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û–∂–∏–¥–∞–π—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É',
          'icon': '/icons/Icon-192.png'
        };
      case 'delivered':
        return {
          'message': '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –ú–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å',
          'icon': '/icons/Icon-192.png'
        };
      case 'cancelled':
        return {'message': '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω', 'icon': '/icons/Icon-192.png'};
      default:
        return {
          'message': '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω',
          'icon': '/icons/Icon-192.png'
        };
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  bool get isSupported {
    return kIsWeb;
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  String get permissionStatus {
    if (!kIsWeb) return 'not-supported';
    return _permissionStatus;
  }
}
