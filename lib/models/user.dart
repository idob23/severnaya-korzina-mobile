// lib/models/user.dart - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import 'package:flutter/foundation.dart';
part 'user.g.dart'; // –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞

class User {
  final int id;
  final String phone;
  final String name; // firstName –≤ API
  final String? lastName;
  final String? email;
  final DateTime createdAt;
  final DateTime? updatedAt;
  final bool isActive;
  final String? avatarUrl;

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
  final List<UserAddress>? addresses;
  final Map<String, dynamic>? settings;

  User({
    required this.id,
    required this.phone,
    required this.name,
    this.lastName,
    this.email,
    required this.createdAt,
    this.updatedAt,
    this.isActive = true,
    this.avatarUrl,
    this.addresses,
    this.settings,
  });

  /// –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ JSON –æ—Ç–≤–µ—Ç–∞ API
  factory User.fromJson(Map<String, dynamic> json) {
    try {
      if (kDebugMode) {
        print('üîß –°–æ–∑–¥–∞–Ω–∏–µ User –∏–∑ JSON: $json');
      }

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–¥—Ä–µ—Å–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      List<UserAddress>? addresses;
      try {
        if (json['addresses'] != null && json['addresses'] is List) {
          addresses = (json['addresses'] as List)
              .map((addr) => UserAddress.fromJson(addr))
              .toList();
        }
      } catch (e) {
        if (kDebugMode) {
          print('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: $e');
        }
        addresses = [];
      }

      // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã
      DateTime createdAt;
      try {
        if (json['createdAt'] != null) {
          createdAt = DateTime.parse(json['createdAt'].toString());
        } else if (json['created_at'] != null) {
          createdAt = DateTime.parse(json['created_at'].toString());
        } else {
          createdAt = DateTime.now();
        }
      } catch (e) {
        if (kDebugMode) {
          print('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã createdAt: $e');
        }
        createdAt = DateTime.now();
      }

      // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      DateTime? updatedAt;
      try {
        if (json['updatedAt'] != null) {
          updatedAt = DateTime.parse(json['updatedAt'].toString());
        } else if (json['updated_at'] != null) {
          updatedAt = DateTime.parse(json['updated_at'].toString());
        }
      } catch (e) {
        if (kDebugMode) {
          print('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã updatedAt: $e');
        }
        updatedAt = null;
      }

      final user = User(
        id: json['id'] ?? 0,
        phone: json['phone']?.toString() ?? '',
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ–ª—é 'name', –∑–∞—Ç–µ–º 'firstName'
        name: json['name']?.toString() ??
            json['firstName']?.toString() ??
            json['first_name']?.toString() ??
            '',
        lastName: json['lastName']?.toString() ?? json['last_name']?.toString(),
        email: json['email']?.toString(),
        createdAt: createdAt,
        updatedAt: updatedAt,
        isActive: json['isActive'] ?? json['is_active'] ?? true,
        avatarUrl:
            json['avatarUrl']?.toString() ?? json['avatar_url']?.toString(),
        addresses: addresses,
      );

      if (kDebugMode) {
        print('‚úÖ User —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ: ${user.fullName}');
      }

      return user;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ User –∏–∑ JSON: $e');
        print('JSON data: $json');
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      return User(
        id: json['id'] ?? 0,
        phone: json['phone']?.toString() ?? '',
        name: json['name']?.toString() ??
            json['firstName']?.toString() ??
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        createdAt: DateTime.now(),
        isActive: true,
      );
    }
  }

  /// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ JSON –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ API
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'phone': phone,
      'firstName': name,
      'lastName': lastName,
      'email': email,
      'createdAt': createdAt.toIso8601String(),
      'updatedAt': updatedAt?.toIso8601String(),
      'isActive': isActive,
      'avatarUrl': avatarUrl,
    };
  }

  /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
  User copyWith({
    int? id,
    String? phone,
    String? name,
    String? lastName,
    String? email,
    DateTime? createdAt,
    DateTime? updatedAt,
    bool? isActive,
    String? avatarUrl,
    List<UserAddress>? addresses,
    Map<String, dynamic>? settings,
  }) {
    return User(
      id: id ?? this.id,
      phone: phone ?? this.phone,
      name: name ?? this.name,
      lastName: lastName ?? this.lastName,
      email: email ?? this.email,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      isActive: isActive ?? this.isActive,
      avatarUrl: avatarUrl ?? this.avatarUrl,
      addresses: addresses ?? this.addresses,
      settings: settings ?? this.settings,
    );
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  String get fullName {
    try {
      if (lastName != null && lastName!.isNotEmpty) {
        return '$name $lastName';
      }
      return name;
    } catch (e) {
      if (kDebugMode) {
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ fullName: $e');
      }
      return name.isNotEmpty ? name : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    }
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
  String get initials {
    try {
      final nameWords = fullName.split(' ');
      if (nameWords.length >= 2) {
        return '${nameWords[0][0]}${nameWords[1][0]}'.toUpperCase();
      } else if (nameWords.isNotEmpty && nameWords[0].isNotEmpty) {
        return nameWords[0][0].toUpperCase();
      }
      return 'U';
    } catch (e) {
      if (kDebugMode) {
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ initials: $e');
      }
      return 'U';
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é
  bool get isProfileComplete {
    try {
      return name.isNotEmpty &&
          phone.isNotEmpty &&
          (addresses?.isNotEmpty ?? false);
    } catch (e) {
      if (kDebugMode) {
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ isProfileComplete: $e');
      }
      return false;
    }
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  UserAddress? get defaultAddress {
    try {
      if (addresses == null || addresses!.isEmpty) return null;

      try {
        return addresses!.firstWhere((addr) => addr.isDefault);
      } catch (e) {
        return addresses!.first; // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π
      }
    } catch (e) {
      if (kDebugMode) {
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ defaultAddress: $e');
      }
      return null;
    }
  }

  @override
  String toString() {
    return 'User(id: $id, phone: $phone, name: $name, fullName: $fullName)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is User && other.id == id && other.phone == phone;
  }

  @override
  int get hashCode {
    return id.hashCode ^ phone.hashCode;
  }
}

/// –ú–æ–¥–µ–ª—å –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserAddress {
  final int? id;
  final String title;
  final String address;
  final bool isDefault;
  final DateTime? createdAt;

  UserAddress({
    this.id,
    required this.title,
    required this.address,
    this.isDefault = false,
    this.createdAt,
  });

  /// –°–æ–∑–¥–∞–µ—Ç –∞–¥—Ä–µ—Å –∏–∑ JSON –æ—Ç–≤–µ—Ç–∞ API
  factory UserAddress.fromJson(Map<String, dynamic> json) {
    try {
      if (kDebugMode) {
        print('üîß –°–æ–∑–¥–∞–Ω–∏–µ UserAddress –∏–∑ JSON: $json');
      }

      // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã
      DateTime? createdAt;
      try {
        if (json['createdAt'] != null) {
          createdAt = DateTime.parse(json['createdAt'].toString());
        } else if (json['created_at'] != null) {
          createdAt = DateTime.parse(json['created_at'].toString());
        }
      } catch (e) {
        if (kDebugMode) {
          print('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã –≤ UserAddress: $e');
        }
        createdAt = null;
      }

      final address = UserAddress(
        id: json['id'],
        title: json['title']?.toString() ?? '',
        address: json['address']?.toString() ?? '',
        isDefault: json['isDefault'] ?? json['is_default'] ?? false,
        createdAt: createdAt,
      );

      if (kDebugMode) {
        print('‚úÖ UserAddress —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ: ${address.title}');
      }

      return address;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ UserAddress –∏–∑ JSON: $e');
        print('JSON data: $json');
      }
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥—Ä–µ—Å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      return UserAddress(
        title: '–ê–¥—Ä–µ—Å',
        address: '',
      );
    }
  }

  /// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∞–¥—Ä–µ—Å –≤ JSON –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ API
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'title': title,
      'address': address,
      'isDefault': isDefault,
      'createdAt': createdAt?.toIso8601String(),
    };
  }

  /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é –∞–¥—Ä–µ—Å–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
  UserAddress copyWith({
    int? id,
    String? title,
    String? address,
    bool? isDefault,
    DateTime? createdAt,
  }) {
    return UserAddress(
      id: id ?? this.id,
      title: title ?? this.title,
      address: address ?? this.address,
      isDefault: isDefault ?? this.isDefault,
      createdAt: createdAt ?? this.createdAt,
    );
  }

  @override
  String toString() {
    return 'UserAddress(id: $id, title: $title, address: $address, isDefault: $isDefault)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is UserAddress &&
        other.id == id &&
        other.title == title &&
        other.address == address;
  }

  @override
  int get hashCode {
    return id.hashCode ^ title.hashCode ^ address.hashCode;
  }
}

/// –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
class AdminUser {
  final String id;
  final String phone;
  final String name;
  final String? lastName;
  final bool isActive;
  final bool isVerified;
  final DateTime? lastLoginAt;
  final DateTime createdAt;
  final int totalOrders;
  final double totalSpent;

  AdminUser({
    required this.id,
    required this.phone,
    required this.name,
    this.lastName,
    required this.isActive,
    required this.isVerified,
    this.lastLoginAt,
    required this.createdAt,
    this.totalOrders = 0,
    this.totalSpent = 0.0,
  });

  factory AdminUser.fromJson(Map<String, dynamic> json) {
    try {
      return AdminUser(
        id: json['id']?.toString() ?? '',
        phone: json['phone'] ?? '',
        name: json['name'] ?? json['firstName'] ?? '',
        lastName: json['last_name'] ?? json['lastName'],
        isActive: json['is_active'] ?? json['isActive'] ?? true,
        isVerified: json['is_verified'] ?? json['isVerified'] ?? false,
        lastLoginAt: json['last_login_at'] != null
            ? DateTime.parse(json['last_login_at'])
            : (json['lastLoginAt'] != null
                ? DateTime.parse(json['lastLoginAt'])
                : null),
        createdAt: json['created_at'] != null
            ? DateTime.parse(json['created_at'])
            : (json['createdAt'] != null
                ? DateTime.parse(json['createdAt'])
                : DateTime.now()),
        totalOrders: json['total_orders'] ?? json['totalOrders'] ?? 0,
        totalSpent:
            (json['total_spent'] ?? json['totalSpent'] ?? 0.0).toDouble(),
      );
    } catch (e) {
      if (kDebugMode) {
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ AdminUser –∏–∑ JSON: $e');
        print('JSON data: $json');
      }
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      return AdminUser(
        id: json['id']?.toString() ?? '',
        phone: json['phone'] ?? '',
        name: json['name'] ?? json['firstName'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        isActive: true,
        isVerified: false,
        createdAt: DateTime.now(),
      );
    }
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'phone': phone,
      'name': name,
      'last_name': lastName,
      'is_active': isActive,
      'is_verified': isVerified,
      'last_login_at': lastLoginAt?.toIso8601String(),
      'created_at': createdAt.toIso8601String(),
      'total_orders': totalOrders,
      'total_spent': totalSpent,
    };
  }

  String get fullName {
    try {
      return lastName != null && lastName!.isNotEmpty
          ? '$name $lastName'
          : name;
    } catch (e) {
      return name.isNotEmpty ? name : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    }
  }

  String get status => isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω';
}
