// sw.js - Service Worker –¥–ª—è –°–µ–≤–µ—Ä–Ω–æ–π –ö–æ—Ä–∑–∏–Ω—ã PWA
const CACHE_NAME = 'sevkorzina-v1.0.0';
const urlsToCache = [
  '/',
  '/main.dart.js',
  '/flutter.js',
  '/flutter_bootstrap.js',
  '/manifest.json',
  '/icons/Icon-192.png',
  '/icons/Icon-512.png',
  '/icons/Icon-maskable-192.png',
  '/icons/Icon-maskable-512.png',
  // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', event => {
  console.log('üîß Service Worker —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...');
  
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => {
        console.log('üíæ –ö—ç—à–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã');
        return cache.addAll(urlsToCache);
      })
      .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      })
  );
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SW
  self.skipWaiting();
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', event => {
  console.log('‚úÖ Service Worker –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è...');
  
  event.waitUntil(
    Promise.all([
      // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫—ç—à–∏
      caches.keys().then(cacheNames => {
        return Promise.all(
          cacheNames.map(cacheName => {
            if (cacheName !== CACHE_NAME) {
              console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à:', cacheName);
              return caches.delete(cacheName);
            }
          })
        );
      }),
      // –ë–µ—Ä–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
      self.clients.claim()
    ])
  );
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', event => {
  // –¢–æ–ª—å–∫–æ –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–æ–≤
  if (event.request.method !== 'GET') {
    return;
  }
  
  event.respondWith(
    caches.match(event.request)
      .then(cachedResponse => {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –≤ –∫—ç—à–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
        if (cachedResponse) {
          // –î–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–µ–ª–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
          if (shouldUpdateInBackground(event.request.url)) {
            fetchAndCache(event.request);
          }
          return cachedResponse;
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –≤ –∫—ç—à–µ - –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Å–µ—Ç–∏
        return fetchAndCache(event.request);
      })
      .catch(() => {
        // –û—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if (event.request.mode === 'navigate') {
          return caches.match('/');
        }
      })
  );
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
function fetchAndCache(request) {
  return fetch(request)
    .then(response => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
      if (!response || response.status !== 200 || response.type !== 'basic') {
        return response;
      }
      
      // –ö–ª–æ–Ω–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –∫—ç—à–∞
      const responseToCache = response.clone();
      
      // –ö—ç—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
      if (shouldCache(request.url)) {
        caches.open(CACHE_NAME)
          .then(cache => {
            cache.put(request, responseToCache);
          })
          .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –∫—ç—à:', error);
          });
      }
      
      return response;
    })
    .catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
      throw error;
    });
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª
function shouldCache(url) {
  return url.includes('.js') || 
         url.includes('.css') || 
         url.includes('.png') || 
         url.includes('.jpg') || 
         url.includes('.jpeg') || 
         url.includes('.svg') || 
         url.includes('.ico') ||
         url.includes('manifest.json');
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –≤ —Ñ–æ–Ω–µ
function shouldUpdateInBackground(url) {
  return url.includes('main.dart.js') || 
         url.includes('manifest.json');
}

// Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
self.addEventListener('push', event => {
  console.log('üì¢ –ü–æ–ª—É—á–µ–Ω–æ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
  
  let notificationData = {};
  
  if (event.data) {
    try {
      notificationData = event.data.json();
    } catch (e) {
      notificationData = {
        title: '–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞',
        body: event.data.text() || '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      };
    }
  }
  
  const options = {
    body: notificationData.body || '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –°–µ–≤–µ—Ä–Ω–æ–π –ö–æ—Ä–∑–∏–Ω—ã',
    icon: '/icons/Icon-192.png',
    badge: '/icons/badge-72x72.png',
    image: notificationData.image,
    vibrate: [100, 50, 100],
    data: {
      dateOfArrival: Date.now(),
      primaryKey: notificationData.id || 1,
      url: notificationData.url || '/'
    },
    actions: [
      {
        action: 'open',
        title: '–û—Ç–∫—Ä—ã—Ç—å',
        icon: '/icons/action-open.png'
      },
      {
        action: 'close',
        title: '–ó–∞–∫—Ä—ã—Ç—å',
        icon: '/icons/action-close.png'
      }
    ],
    requireInteraction: notificationData.important || false,
    silent: false,
    tag: 'sevkorzina-notification'
  };
  
  event.waitUntil(
    self.registration.showNotification(
      notificationData.title || '–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞',
      options
    )
  );
});

// –ö–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é
self.addEventListener('notificationclick', event => {
  console.log('üîî –ö–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é');
  
  event.notification.close();
  
  const urlToOpen = event.notification.data?.url || '/';
  
  if (event.action === 'open' || !event.action) {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    event.waitUntil(
      clients.matchAll({ type: 'window', includeUncontrolled: true })
        .then(clientList => {
          // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ - —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–µ–º
          for (const client of clientList) {
            if (client.url.includes(urlToOpen) && 'focus' in client) {
              return client.focus();
            }
          }
          
          // –ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
          if (clients.openWindow) {
            return clients.openWindow(urlToOpen);
          }
        })
    );
  }
});

// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ —Ñ–æ–Ω–µ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
self.addEventListener('sync', event => {
  console.log('üîÑ –§–æ–Ω–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
  
  if (event.tag === 'background-sync') {
    event.waitUntil(
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
      console.log('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...')
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
self.addEventListener('error', event => {
  console.error('‚ùå –û—à–∏–±–∫–∞ Service Worker:', event.error);
});

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
console.log(`üöÄ Service Worker –°–µ–≤–µ—Ä–Ω–æ–π –ö–æ—Ä–∑–∏–Ω—ã –∑–∞–ø—É—â–µ–Ω. –í–µ—Ä—Å–∏—è –∫—ç—à–∞: ${CACHE_NAME}`);